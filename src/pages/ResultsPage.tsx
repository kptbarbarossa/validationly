import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { SEOHead } from '../components/SEOHead';
import { PLATFORMS } from '../constants';

interface PlatformData {
  platform: string;
  trend: 'rising' | 'stable' | 'declining';
  sentiment: 'positive' | 'neutral' | 'negative';
  insight: string;
  keywords: string[];
  demandScore: number;
  postCount: number;
  engagement: number;
}

interface AnalysisResult {
  overallDemand: 'high' | 'medium' | 'low';
  opportunities: string[];
  risks: string[];
  aiRecommendation: string;
  platforms: PlatformData[];
}

interface SocialPost {
  platform: 'twitter' | 'reddit' | 'linkedin';
  content: string;
  title?: string;
  hashtags: string[];
}

const ResultsPage: React.FC = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const [isLoading, setIsLoading] = useState(true);
  const [scanProgress, setScanProgress] = useState(0);
  const [currentPlatform, setCurrentPlatform] = useState('');
  const [result, setResult] = useState<AnalysisResult | null>(null);
  const [activeTab, setActiveTab] = useState<'twitter' | 'reddit' | 'linkedin'>('twitter');
  const [filterPlatform, setFilterPlatform] = useState<string>('all');

  const idea = location.state?.idea || 'Your business idea';

  useEffect(() => {
    simulatePlatformScanning();
  }, []);

  const simulatePlatformScanning = async () => {
    const platforms = ['Twitter', 'Reddit', 'Product Hunt', 'App Store', 'Google Trends', 'LinkedIn', 'YouTube', 'GitHub'];
    
    for (let i = 0; i < platforms.length; i++) {
      setCurrentPlatform(platforms[i]);
      setScanProgress(((i + 1) / platforms.length) * 100);
      await new Promise(resolve => setTimeout(resolve, 800));
    }

    // Generate mock results
    const mockResult: AnalysisResult = {
      overallDemand: 'high',
      opportunities: [
        'Kullanƒ±cƒ±lar personalized coach istiyor',
        'Habit tracking √∂zelliƒüi √ßok talep g√∂r√ºyor',
        'Calorie counter i≈ülevselliƒüi eksik',
        'Sosyal √∂zellikler i√ßin talep var'
      ],
      risks: [
        'Rekabet √ßok y√ºksek',
        'Market saturation riski',
        'User acquisition maliyeti artƒ±yor'
      ],
      aiRecommendation: 'Fitness uygulamasƒ± pazarƒ±nda hala bo≈üluklar mevcut. √ñzellikle habit tracking ve personalized coaching alanlarƒ±nda fƒ±rsatlar var. Ancak g√º√ßl√º bir USP ve marketing stratejisi gerekli.',
      platforms: [
        {
          platform: 'twitter',
          trend: 'rising',
          sentiment: 'positive',
          insight: 'Fitness hashtag\'leri son 3 ayda %62 arttƒ±',
          keywords: ['#habittracking', '#caloriecounter', '#fitnessapp'],
          demandScore: 85,
          postCount: 1250,
          engagement: 8900
        },
        {
          platform: 'reddit',
          trend: 'rising',
          sentiment: 'positive',
          insight: 'r/fitness ve r/bodybuilding\'de yoƒüun tartƒ±≈üma',
          keywords: ['habit tracking', 'calorie counting', 'workout app'],
          demandScore: 78,
          postCount: 890,
          engagement: 5600
        },
        {
          platform: 'producthunt',
          trend: 'stable',
          sentiment: 'neutral',
          insight: 'Yeni fitness app\'ler d√ºzenli olarak launch oluyor',
          keywords: ['fitness', 'health', 'wellness'],
          demandScore: 65,
          postCount: 45,
          engagement: 1200
        },
        {
          platform: 'appstore',
          trend: 'rising',
          sentiment: 'positive',
          insight: 'Fitness kategorisinde y√ºksek rating\'ler',
          keywords: ['fitness', 'workout', 'health'],
          demandScore: 82,
          postCount: 2300,
          engagement: 15600
        },
        {
          platform: 'googletrends',
          trend: 'rising',
          sentiment: 'positive',
          insight: 'Fitness app aramalarƒ± s√ºrekli artƒ±yor',
          keywords: ['fitness app', 'workout app', 'health app'],
          demandScore: 88,
          postCount: 0,
          engagement: 0
        },
        {
          platform: 'linkedin',
          trend: 'stable',
          sentiment: 'positive',
          insight: 'Health-tech startup\'larƒ±nda yatƒ±rƒ±m artƒ±yor',
          keywords: ['healthtech', 'fitness', 'wellness'],
          demandScore: 72,
          postCount: 340,
          engagement: 2800
        },
        {
          platform: 'youtube',
          trend: 'rising',
          sentiment: 'positive',
          insight: 'Fitness app review videolarƒ± √ßok izleniyor',
          keywords: ['fitness app review', 'workout app', 'health app'],
          demandScore: 79,
          postCount: 156,
          engagement: 8900
        },
        {
          platform: 'github',
          trend: 'stable',
          sentiment: 'neutral',
          insight: 'Fitness app open source projeleri aktif',
          keywords: ['fitness', 'health', 'tracking'],
          demandScore: 68,
          postCount: 89,
          engagement: 1200
        }
      ]
    };

    setResult(mockResult);
    setIsLoading(false);
  };

  const getTrendIcon = (trend: string) => {
    switch (trend) {
      case 'rising': return 'üìà';
      case 'stable': return '‚û°Ô∏è';
      case 'declining': return 'üìâ';
      default: return '‚û°Ô∏è';
    }
  };

  const getSentimentIcon = (sentiment: string) => {
    switch (sentiment) {
      case 'positive': return 'üòä';
      case 'neutral': return 'üòê';
      case 'negative': return 'üò°';
      default: return 'üòê';
    }
  };

  const getDemandColor = (demand: 'high' | 'medium' | 'low') => {
    switch (demand) {
      case 'high': return 'text-green-400 bg-green-500/20 border-green-500/30';
      case 'medium': return 'text-yellow-400 bg-yellow-500/20 border-yellow-500/30';
      case 'low': return 'text-red-400 bg-red-500/20 border-red-500/30';
      default: return 'text-gray-400 bg-gray-500/20 border-gray-500/30';
    }
  };

  const getDemandText = (demand: 'high' | 'medium' | 'low') => {
    switch (demand) {
      case 'high': return 'üî• Y√ºksek';
      case 'medium': return 'üåø Orta';
      case 'low': return '‚ùÑÔ∏è D√º≈ü√ºk';
      default: return '‚ùì Belirsiz';
    }
  };

  const generateSocialPosts = (): SocialPost[] => {
    if (!result) return [];

    const baseKeywords = result.platforms
      .flatMap(p => p.keywords)
      .slice(0, 5)
      .join(' ');

    return [
      {
        platform: 'twitter',
        content: `Fitness app'lere ilgi son 3 ayda %62 arttƒ± üöÄ Kullanƒ±cƒ±lar √∂zellikle ${baseKeywords} √∂zelliklerini talep ediyor. Pazar h√¢l√¢ yeni giri≈üimlere a√ßƒ±k gibi g√∂r√ºn√ºyor!`,
        hashtags: ['#fitnessapp', '#startup', '#healthtech']
      },
      {
        platform: 'reddit',
        title: 'Fitness App\'lerde y√ºkselen trendler üöÄ',
        content: `Son 3 ayda talep %62 arttƒ±\n\nEn √ßok konu≈üulan √∂zellik: ${baseKeywords}\n\nKullanƒ±cƒ± yorumlarƒ±nda pozitif eƒüilim baskƒ±n\n\nSoru: "Sizce pazarda h√¢l√¢ bo≈üluk var mƒ±?"`,
        hashtags: ['fitness', 'startup', 'healthtech']
      },
      {
        platform: 'linkedin',
        content: `üìä Son 3 ayda fitness uygulamalarƒ±na olan talep ciddi ≈üekilde arttƒ±. Kullanƒ±cƒ±lar en √ßok ${baseKeywords} √∂zelliklerinden bahsediyor. Bu da yeni giri≈üimler i√ßin fƒ±rsatlar sunuyor üöÄ\n\nEƒüer fitness/health-tech alanƒ±nda √ßalƒ±≈üƒ±yorsanƒ±z, ≈üimdi doƒüru zaman olabilir.\n\nSizce bu pazarda h√¢l√¢ yenilik i√ßin alan var mƒ±?`,
        hashtags: ['#healthtech', '#startup', '#fitness']
      }
    ];
  };

  const handleShare = async (platform: string, content: string) => {
    if (platform === 'twitter') {
      const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(content)}`;
      window.open(twitterUrl, '_blank');
    } else {
      try {
        await navigator.clipboard.writeText(content);
        alert('ƒ∞√ßerik kopyalandƒ±!');
      } catch (err) {
        console.error('Kopyalama hatasƒ±:', err);
      }
    }
  };

  const exportReport = (format: 'pdf' | 'csv') => {
    // Mock export functionality
    alert(`${format.toUpperCase()} raporu indiriliyor...`);
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-900 text-white">
        <div className="container mx-auto px-6 py-12">
          {/* Loading Header */}
          <div className="text-center mb-12">
            <div className="text-6xl mb-6 animate-pulse">üîç</div>
            <h1 className="text-4xl font-bold mb-4">Platformlar Taranƒ±yor</h1>
            <p className="text-xl text-gray-400">Veriler analiz ediliyor...</p>
          </div>

          {/* Progress Bar */}
          <div className="max-w-2xl mx-auto mb-8">
            <div className="bg-gray-800 rounded-full h-3 mb-4">
              <div 
                className="bg-gradient-to-r from-blue-500 to-purple-600 h-3 rounded-full transition-all duration-500"
                style={{ width: `${scanProgress}%` }}
              ></div>
            </div>
            <div className="text-center">
              <span className="text-sm text-gray-400">
                {currentPlatform ? `${currentPlatform} taranƒ±yor...` : 'Hazƒ±rlanƒ±yor...'}
              </span>
              <span className="ml-2 text-blue-400 font-semibold">{Math.round(scanProgress)}%</span>
            </div>
          </div>

          {/* Skeleton Cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {Array.from({ length: 8 }).map((_, i) => (
              <div key={i} className="bg-gray-800/50 rounded-xl p-6 animate-pulse">
                <div className="flex items-center space-x-4 mb-4">
                  <div className="w-12 h-12 bg-gray-700 rounded-full"></div>
                  <div className="flex-1">
                    <div className="h-4 bg-gray-700 rounded w-24 mb-2"></div>
                    <div className="h-3 bg-gray-700 rounded w-32"></div>
                  </div>
                </div>
                <div className="space-y-3">
                  <div className="h-3 bg-gray-700 rounded w-full"></div>
                  <div className="h-3 bg-gray-700 rounded w-3/4"></div>
                  <div className="h-3 bg-gray-700 rounded w-1/2"></div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  if (!result) {
    return (
      <div className="min-h-screen bg-gray-900 text-white flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-6">‚ùå</div>
          <h1 className="text-3xl font-bold mb-4">Analiz Bulunamadƒ±</h1>
          <p className="text-gray-400 mb-8">L√ºtfen ana sayfadan yeni bir analiz ba≈ülatƒ±n.</p>
          <button
            onClick={() => navigate('/')}
            className="px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl font-semibold hover:shadow-lg transition-all"
          >
            Ana Sayfaya D√∂n
          </button>
        </div>
      </div>
    );
  }

  const socialPosts = generateSocialPosts();
  const filteredPlatforms = filterPlatform === 'all' 
    ? result.platforms 
    : result.platforms.filter(p => p.platform === filterPlatform);

  return (
    <>
      <SEOHead
        title={`Analiz Sonu√ßlarƒ± | Validationly`}
        description="Platform tarama ve analiz sonu√ßlarƒ± - AI destekli startup validation"
        keywords="startup validation, platform analysis, market research, AI insights"
      />

      <div className="min-h-screen bg-gray-900 text-white">
        <div className="container mx-auto px-6 py-12">
          
          {/* Header */}
          <div className="text-center mb-12">
            <h1 className="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent">
              Platform Analiz Sonu√ßlarƒ±
            </h1>
            <p className="text-xl text-gray-400 max-w-3xl mx-auto">
              "{idea}" i√ßin kapsamlƒ± platform tarama ve AI analizi
            </p>
          </div>

          {/* General Analysis */}
          <div className="bg-gray-800/50 backdrop-blur rounded-3xl p-8 border border-white/10 mb-12">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              <div>
                <h2 className="text-2xl font-bold text-white mb-6">Genel Analiz (AI Insight)</h2>
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <span className="text-2xl">üìä</span>
                    <div>
                      <div className="text-sm text-gray-400">Talep Durumu</div>
                      <div className={`inline-block px-3 py-1 rounded-full text-sm font-medium border ${getDemandColor(result.overallDemand)}`}>
                        {getDemandText(result.overallDemand)}
                      </div>
                    </div>
                  </div>
                  <div className="text-gray-300 leading-relaxed">
                    {result.aiRecommendation}
                  </div>
                </div>
              </div>
              
              <div>
                <h3 className="text-xl font-semibold text-white mb-4">Fƒ±rsatlar & Riskler</h3>
                <div className="grid grid-cols-1 gap-4">
                  <div>
                    <h4 className="text-green-400 font-medium mb-2">üí° Fƒ±rsatlar</h4>
                    <ul className="space-y-2 text-sm text-gray-300">
                      {result.opportunities.map((opp, i) => (
                        <li key={i} className="flex items-start space-x-2">
                          <span className="text-green-400 mt-1">‚Ä¢</span>
                          <span>{opp}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                  <div>
                    <h4 className="text-red-400 font-medium mb-2">‚ö†Ô∏è Riskler</h4>
                    <ul className="space-y-2 text-sm text-gray-300">
                      {result.risks.map((risk, i) => (
                        <li key={i} className="flex items-start space-x-2">
                          <span className="text-red-400 mt-1">‚Ä¢</span>
                          <span>{risk}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Filters */}
          <div className="flex flex-wrap items-center justify-between mb-8">
            <div className="flex items-center space-x-4">
              <select
                value={filterPlatform}
                onChange={(e) => setFilterPlatform(e.target.value)}
                className="bg-gray-800/50 border border-white/20 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-purple-500/50"
                aria-label="Platform filtrele"
              >
                <option value="all">T√ºm Platformlar</option>
                {result.platforms.map(p => (
                  <option key={p.platform} value={p.platform}>
                    {PLATFORMS.find(pl => pl.name === p.platform)?.displayName || p.platform}
                  </option>
                ))}
              </select>
            </div>
            
            <div className="flex items-center space-x-3">
              <button
                onClick={() => exportReport('pdf')}
                className="px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg text-white text-sm transition-colors"
              >
                üìÑ PDF ƒ∞ndir
              </button>
              <button
                onClick={() => exportReport('csv')}
                className="px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg text-white text-sm transition-colors"
              >
                üìä CSV ƒ∞ndir
              </button>
            </div>
          </div>

          {/* Platform Cards Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-12">
            {filteredPlatforms.map((platform, index) => (
              <div key={index} className="bg-gray-800/50 backdrop-blur rounded-xl border border-white/10 hover:border-white/20 transition-all duration-200 hover:scale-105">
                <div className="p-6">
                  {/* Header */}
                  <div className="flex items-center justify-between mb-4">
                    <div className="flex items-center space-x-3">
                      <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-2xl">
                        {PLATFORMS.find(p => p.name === platform.platform)?.icon || 'üì±'}
                      </div>
                      <div>
                        <h3 className="text-xl font-bold text-white">
                          {PLATFORMS.find(p => p.name === platform.platform)?.displayName || platform.platform}
                        </h3>
                        <div className="flex items-center space-x-2 text-sm">
                          <span className="text-gray-400">{getTrendIcon(platform.trend)}</span>
                          <span className="text-gray-400">{getSentimentIcon(platform.sentiment)}</span>
                          <span className="text-blue-400 font-medium">{platform.demandScore}/100</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* Mini Chart Placeholder */}
                  <div className="h-16 bg-gray-700/50 rounded-lg mb-4 flex items-center justify-center">
                    <span className="text-gray-400 text-sm">üìä Trend Chart</span>
                  </div>

                  {/* AI Insight */}
                  <p className="text-gray-300 text-sm mb-4 leading-relaxed">
                    {platform.insight}
                  </p>

                  {/* Keywords */}
                  <div className="flex flex-wrap gap-2 mb-4">
                    {platform.keywords.slice(0, 3).map((keyword, i) => (
                      <span key={i} className="px-2 py-1 bg-blue-500/20 text-blue-400 text-xs rounded-full border border-blue-500/30">
                        {keyword}
                      </span>
                    ))}
                  </div>

                  {/* Stats */}
                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div className="text-center p-2 bg-gray-700/50 rounded-lg">
                      <div className="text-lg font-bold text-green-400">{platform.postCount}</div>
                      <div className="text-gray-400">Post</div>
                    </div>
                    <div className="text-center p-2 bg-gray-700/50 rounded-lg">
                      <div className="text-lg font-bold text-blue-400">{platform.engagement}</div>
                      <div className="text-gray-400">Engagement</div>
                    </div>
                  </div>

                  {/* Detail Button */}
                  <button className="w-full mt-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 rounded-lg text-white font-medium transition-all transform hover:scale-105">
                    [Detaylƒ± Analiz]
                  </button>
                </div>
              </div>
            ))}
          </div>

          {/* Social Media Post Suggestions */}
          <div className="bg-gray-800/50 backdrop-blur rounded-3xl border border-white/10 mb-8">
            <div className="p-6">
              <h2 className="text-2xl font-bold text-white mb-6">üìå Otomatik Post √ñnerileri</h2>
              
              {/* Tabs */}
              <div className="flex space-x-1 mb-6 bg-gray-700/50 rounded-lg p-1">
                {['twitter', 'reddit', 'linkedin'].map((tab) => (
                  <button
                    key={tab}
                    onClick={() => setActiveTab(tab as any)}
                    className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${
                      activeTab === tab
                        ? 'bg-blue-600 text-white'
                        : 'text-gray-400 hover:text-white hover:bg-gray-600/50'
                    }`}
                  >
                    {tab === 'twitter' ? 'üê¶ Twitter' : tab === 'reddit' ? 'üì± Reddit' : 'üíº LinkedIn'}
                  </button>
                ))}
              </div>

              {/* Post Content */}
              {socialPosts.map((post) => (
                post.platform === activeTab && (
                  <div key={post.platform} className="space-y-4">
                    {post.title && (
                      <div>
                        <label className="block text-sm font-medium text-gray-400 mb-2">Ba≈ülƒ±k</label>
                        <div className="bg-gray-900/50 border border-white/20 rounded-lg p-3 text-white">
                          {post.title}
                        </div>
                      </div>
                    )}
                    
                    <div>
                      <label className="block text-sm font-medium text-gray-400 mb-2">
                        {post.platform === 'twitter' ? 'Tweet' : 'ƒ∞√ßerik'}
                      </label>
                      <div className="bg-gray-900/50 border border-white/20 rounded-lg p-3 text-white whitespace-pre-wrap">
                        {post.content}
                      </div>
                      
                      {post.platform === 'twitter' && (
                        <div className="text-right mt-2">
                          <span className="text-sm text-gray-400">
                            {post.content.length}/280 karakter
                          </span>
                        </div>
                      )}
                    </div>

                    {/* Hashtags */}
                    <div>
                      <label className="block text-sm font-medium text-gray-400 mb-2">Hashtag'ler</label>
                      <div className="flex flex-wrap gap-2">
                        {post.hashtags.map((tag, i) => (
                          <span key={i} className="px-2 py-1 bg-purple-500/20 text-purple-400 text-xs rounded-full border border-purple-500/30">
                            {tag}
                          </span>
                        ))}
                      </div>
                    </div>

                    {/* Action Button */}
                    <div className="flex justify-end">
                      <button
                        onClick={() => handleShare(post.platform, post.title ? `${post.title}\n\n${post.content}` : post.content)}
                        className={`px-6 py-2 rounded-lg font-medium transition-all transform hover:scale-105 ${
                          post.platform === 'twitter'
                            ? 'bg-blue-500 hover:bg-blue-600 text-white'
                            : 'bg-gray-600 hover:bg-gray-700 text-white'
                        }`}
                      >
                        {post.platform === 'twitter' ? 'üê¶ Tweetle' : 'üìã Kopyala'}
                      </button>
                    </div>
                  </div>
                )
              ))}
            </div>
          </div>

          {/* Try Another Idea */}
          <div className="text-center">
            <button
              onClick={() => navigate('/')}
              className="px-8 py-4 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 rounded-2xl text-white font-semibold text-lg transition-all transform hover:scale-105"
            >
              üöÄ Ba≈üka Bir Fikir Analiz Et
            </button>
          </div>
        </div>
      </div>
    </>
  );
};

export default ResultsPage;
